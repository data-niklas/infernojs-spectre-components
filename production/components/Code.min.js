import{Component,Fragment}from"../inferno.min.js";import{createElement as c}from"../inferno-create-element.min.js";import{generateClassName,addEvents}from"./Utils.min.js";class Code extends Component{constructor(props){super(props)}render(){var props={};props=generateClassName(passedProps,""),props=addEvents(this.props,props);var inner=c("code",props,this.props.children);if(this.props.lang){var className=props.className;return 0===className.length?className="code":className+=" code",c("pre",{className:className,"data-lang":this.props.lang},inner)}return inner}}class Comment extends Component{constructor(props){super(props)}render(){return c("span",{className:"com"},this.props.children)}}class Tag extends Component{constructor(props){super(props)}render(){return c("span",{className:"tag"},this.props.children)}}class Attribute extends Component{constructor(props){super(props)}render(){var items=[];return this.props.name&&items.push(c("span",{className:"atn"},this.props.name)),this.props.value&&(items.length>0&&items.push("c"),items.push(c("span",{className:"atv"},"&quot;"+this.props.value+"&quot;"))),c(Fragment,null,items)}}export default{Code:Code,Comment:Comment,Tag:Tag,Attribute:Attribute};