import{Component}from"../../inferno.min.js";import{createElement as c}from"../../inferno-create-element.min.js";import{generateClassName,addEvents}from"../Utils.min.js";class Columns extends Component{constructor(props){super(props)}render(){var props={},className="columns";return!0===this.props.gapless&&(className+=" col-gapless"),!0===this.props.oneline&&(className+=" col-oneline"),props=generateClassName(this.props,className),props=addEvents(this.props,props),c("div",props,this.props.children)}}class Column extends Component{constructor(props){super(props)}render(){var props={},className="column";if(this.props.width&&(className+=" col-"+this.props.width),this.props.margin)switch(this.props.margin){case"left":className+=" col-ml-auto";break;case"right":className+=" col-mr-auto";break;case"center":className+=" col-mx-auto"}var size=this.props.size;if(size)if("string"==typeof size)switch(size){case"xl":className+=" col-xl-auto";break;case"l":className+=" col-lg-auto";break;case"m":className+=" col-md-auto";break;case"s":className+=" col-sm-auto";break;case"xs":className+=" col-xs-auto"}else if(Array.isArray(size))for(var item of size)className+=this.addSize(item);else"object"==typeof size&&(className+=this.addSize(item));return props=generateClassName(this.props,className),props=addEvents(this.props,props),c("div",props,this.props.children)}addSize(item){switch(item.size){case"xl":return" col-xl-"+item.width;case"l":return" col-lg-"+item.width;case"m":return" col-md-"+item.width;case"s":return" col-sm-"+item.width;case"xs":return" col-xs-"+item.width;default:return" col-"+item.width}}}export{Columns,Column};
