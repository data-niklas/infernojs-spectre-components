import{Component,Fragment}from"../../inferno.min.js";import{createElement as c}from"../../inferno-create-element.min.js";import{generateClassName,addEvents}from"../Utils.min.js";class Input extends Component{constructor(props){super(props),this.state={},this.props.checked&&(this.state.checked=this.props.checked),this.props.value&&(this.state.value=this.props.value)}render(){var that=this,props={},type=this.props.type,className=this.buildClassName(props,type),icon=this.props.icon;!0===this.props.loading&&(icon="loading"),delete this.props.loading,props=generateClassName(this.props,className,props),props=addEvents(this.props,props),this.props.placeholder&&(props.placeholder=this.props.placeholder);var listener=this.props.onInput;props.oninput=this.getChangeEvent(this,listener,type);var items=[];switch(this.props.title&&items.push(this.getTitle()),this.props.hidden&&(props.hidden=!0),type){case"checkbox":case"switch":case"radio":var{classNameCopy:classNameCopy,newProps:newProps}=this.setupOther(props,type);props=newProps,items.push(c("label",{className:classNameCopy},c("input",props,null),c("i",{className:"form-icon"},null),this.props.children));break;case"text":props=this.setupText(props),items.push(c("input",props,null));break;case"slider":props=this.setupSlider(props),items.push(c("input",props,null))}if(icon){var lastIndex=items.length-1,{position:position,iconClass:iconClass}=this.getIconArguments(icon);items[lastIndex]=c("div",{className:position},items[lastIndex],c("i",{className:iconClass},null))}return this.props.hint&&items.push(c("p",{className:"form-input-hint"},this.props.hint)),c(Fragment,null,items)}getChangeEvent(that,listener,type){return oEvent=>{var element=oEvent.target;if("checkbox"===type||"switch"===type||"radio"===type){var checked=!that.state.checked;listener&&listener(oEvent,checked),that.setState({checked:checked})}else{var value=element.value;listener&&listener(oEvent,value),that.setState({value:value})}}}buildClassName(props,type){var className="form-"+type;return"text"===type&&(className="form-input"),props.inline&&(className+=" form-inline"),props.status&&(className+=" is-"+props.status),"large"===props.size?className+=" input-lg":"small"===props.size&&(className+=" input-sm"),className}getIconArguments(icon){var position,iconClass;return"string"==typeof icon?position="has-icon-right":(position="has-icon-"+icon.position||"right",icon=icon.icon),{position:position,iconClass:iconClass="loading"===icon?"form-icon loading":"form-icon icon icon-"+icon}}getTitle(){var titleProps={},titleClassName="form-label";return this.props.id&&(titleProps.for=this.props.id),"large"===this.props.size?titleClassName+=" label-lg":"small"===this.props.size&&(titleClassName+=" label-sm"),titleProps.className=titleClassName,c("label",titleProps,this.props.title)}setupText(props){return void 0!==this.state.value&&(props.value=this.state.value),this.props.textType?props.type=this.props.textType:props.type="text",this.props.pattern&&(props.pattern=this.props.pattern),props}setupOther(props,type){props.type="switch"===type?"checkbox":type;var classNameCopy=props.className;return delete props.className,void 0!==this.state.checked&&(props.checked=this.state.checked),{classNameCopy:classNameCopy,newProps:props}}setupSlider(props){return props.type="range",this.props.step&&(props.step=this.props.step),void 0!==this.state.value&&(props.value=this.state.value),this.props.min&&(props.min=this.props.min),this.props.max&&(props.max=this.props.max),props}}export default Input;