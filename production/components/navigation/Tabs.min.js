import{Component}from"../../inferno.min.js";import{createElement as c}from"../../inferno-create-element.min.js";import{generateClassName,addEvents}from"../Utils.min.js";import Link from"../Link.min.js";class Tabs extends Component{constructor(props){super(props),this.state={tab:this.props.tab||1}}render(){var props={},className="tab"+(!0===this.props.block?" tab-block":"");props=generateClassName(this.props,className),props=addEvents(this.props,props);var items=[],tabs=this.props.tabs,tab=this.state.tab;for(let index=0;index<tabs.length;index++){const tabName=tabs[index];items.push(c("div",{className:"tab-item"+(tab===index+1?" active":"")},c(Link,{href:"javascript:void(0)"},tabName)))}this.props.action&&items.push(c("div",{className:"tab-item tab-action"},this.props.action));var listener=this.props.onTab,that=this;return props.onClick=e=>{if("A"===e.target.tagName){var inner=e.target.innerHTML,index=tabs.indexOf(inner)+1;if(index===that.state.tab)return;that.setState({tab:index}),listener&&listener(index,inner)}},c("div",props,items)}}export default Tabs;